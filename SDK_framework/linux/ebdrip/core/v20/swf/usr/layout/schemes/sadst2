%!PS-Adobe-3.0
%%Title: SaddleStitch_2
%%Creator: Global Graphics Software Limited
%%CreationDate: April 2005
% Copyright (C) 2005 Global Graphics Software Limited. All Rights Reserved.
% Global Graphics Software Ltd. Confidential Information.
% $Revision: 1.5.10.1.1.1 $
%%EndComments

% $HopeName: SWv20!swf:usr:layout:schemes:sadst2(EBDSDK_P.1) $



% This file defines the Saddle-Stitch imposition scheme for use with the 
% HqnLayout procset. 
% Copyright (C) 2005 Global Graphics Software Limited. All Rights Reserved.

	<<

	/Name  (SaddleStitch_2)

	/UserName (Two-up, saddle-stitched)
	
	/SchemeVersion	(1.1.0)

	/Sides 2

	/CheckDivisor 0

	% Any values that differ from those in Validate
	/LocalValidate <<
		/SpineFold <<
			/default	/Vertical
			/override	{ SpineFold dup /None eq { pop /Auto } if } bind
		>>
	>>
	
	/LocalValues [
	]
	
	% SetOnce should be a boolean or a procedure that returns a boolean
	% If true, a single layout is used for all surfaces, 
	% if false the layout is recalculated for every sheet
	/SetOnce false
	
	/FixedPageCount true
	/UsePageRotate false
	
	% Called at the start of the job to set anything that might be useful
	% later in SetLayout
	/Initialize {
	
		/SS2PageArray <<
			/Horizontal <<
				/Left	[
						[ % front
						[<< /PN 0 /PO 90 /CX 0 /CY 0 /SCX 0 /SCY -1 >>]
						[<< /PN -1 /PO 90 /CX 0 /CY 0 /SCX 0 /SCY 1 >>]
					]
						[ % back
						[<< /PN 1 /PO 270 /CX 0 /CY 0 /SCX 0 /SCY -1 >>]
						[<< /PN -2 /PO 270 /CX 0 /CY 0 /SCX 0 /SCY 1 >>]
					]
				]
				/Right	[
						[ % front
						[<< /PN -1 /PO 90 /CX 0 /CY 0 /SCX 0 /SCY -1 >>]
						[<< /PN 0 /PO 90 /CX 0 /CY 0 /SCX 0 /SCY 1 >>]
					]
						[ % back
						[<< /PN -2 /PO 270 /CX 0 /CY 0 /SCX 0 /SCY -1 >>]
						[<< /PN 1 /PO 270 /CX 0 /CY 0 /SCX 0 /SCY 1 >>]
					]
				]
				/TopA	[
						[ % front
						[<< /PN -1 /PO 0 /CX 0 /CY 0 /SCX 0 /SCY -1 >>]
						[<< /PN 0 /PO 0 /CX 0 /CY 0 /SCX 0 /SCY 1 >>]
					]
						[ % back
						[<< /PN -2 /PO 180 /CX 0 /CY 0 /SCX 0 /SCY -1 >>]
						[<< /PN 1 /PO 180 /CX 0 /CY 0 /SCX 0 /SCY 1 >>]
					]
				]
				/TopB	[
						[ % front
						[<< /PN -1 /PO 180 /CX 0 /CY 0 /SCX 0 /SCY -1 >>]
						[<< /PN 0 /PO 0 /CX 0 /CY 0 /SCX 0 /SCY 1 >>]
					]
						[ % back
						[<< /PN -2 /PO 180 /CX 0 /CY 0 /SCX 0 /SCY -1 >>]
						[<< /PN 1 /PO 0 /CX 0 /CY 0 /SCX 0 /SCY 1 >>]
					]
				]
				/TopC 1 index
			>>
			/Vertical <<
				/Left	[
						[ % front
						[<< /PN -1 /PO 0 /CX 0 /CY 0 /SCX 1 /SCY 0 >>
							<< /PN 0 /PO 0 /CX 0 /CY 0 /SCX -1 /SCY 0 >>]
					]
						[ % back
						[<< /PN 1 /PO 0 /CX 0 /CY 0 /SCX 1 /SCY 0 >>
							<< /PN -2 /PO 0 /CX 0 /CY 0 /SCX -1 /SCY 0 >>]
					]
				]
				/Right	[
						[ % front
						[<< /PN 0 /PO 0 /CX 0 /CY 0 /SCX 1 /SCY 0 >>
							<< /PN -1 /PO 0 /CX 0 /CY 0 /SCX -1 /SCY 0 >>]
					]
						[ % back
						[<< /PN -2 /PO 0 /CX 0 /CY 0 /SCX 1 /SCY 0 >>
							<< /PN 1 /PO 0 /CX 0 /CY 0 /SCX -1 /SCY 0 >>]
					]
				]
				/TopA	[
						[ % front
						[<< /PN -1 /PO 90 /CX 0 /CY 0 /SCX 1 /SCY 0 >>
							<< /PN 0 /PO 90 /CX 0 /CY 0 /SCX -1 /SCY 0 >>]
					]
						[ % back
						[<< /PN 1 /PO 90 /CX 0 /CY 0 /SCX 1 /SCY 0 >>
							<< /PN -2 /PO 90 /CX 0 /CY 0 /SCX -1 /SCY 0 >>]
					]
				]
				/TopB	[
						[ % front
						[<< /PN -1 /PO 270 /CX 0 /CY 0 /SCX 1 /SCY 0 >>
							<< /PN 0 /PO 90 /CX 0 /CY 0 /SCX -1 /SCY 0 >>]
					]
						[ % back
						[<< /PN 1 /PO 270 /CX 0 /CY 0 /SCX 1 /SCY 0 >>
							<< /PN -2 /PO 90 /CX 0 /CY 0 /SCX -1 /SCY 0 >>]
					]
				]
				/TopC 1 index
			>>
		>> def
		
		% Procedures to select SpineFold and Geometry from Auto SpineFold selections
		/SS2Auto <<
			/Left [
					<<
					/name /Vert
					/getwidth { pw 2 mul GA add }
					/getheight { ph }
					/result <<
						/SpineFold /Vertical
						/PageCountUp 1
						/PageCountAcross 2
					>>
				>>
					<<
					/name /Horiz
					/getwidth { ph }
					/getheight { pw 2 mul GA add }
					/result <<
						/SpineFold /Horizontal
						/PageCountUp 2
						/PageCountAcross 1
					>>
				>>
			]
			/Right 1 index
			/TopA [
					<<
					/name /Vert
					/getwidth { ph 2 mul GA add }
					/getheight { pw }
					/result <<
						/SpineFold /Vertical
						/PageCountUp 1
						/PageCountAcross 2
					>>
				>>
					<<
					/name /Horiz
					/getwidth { pw }
					/getheight { ph 2 mul GA add }
					/result <<
						/SpineFold /Horizontal
						/PageCountUp 2
						/PageCountAcross 1
					>>
				>>
			]
			/TopB 1 index
			/TopC 1 index
		>> def
	} bind

	/TableInitialize {
			<<
			/PageCountAcross <<
				/Horizontal [ 1 2 ]
				/Vertical [ 2 1 ]
			>> SpineFold dup /Auto eq { pop /Vertical } if get 
				aload pop
			/PageCountUp exch
			/PageFlow BindingEdge /TopC eq { /TopC }{ /JobSaddle } ifelse
		>>
	} bind

	% No SetLayout, because Initialize has called TableBasedInit_2. Instead, we have GetAutoSpine
	% and GetPageArray

	/GetAutoSpine {
		SS2Auto BindingEdge get
	} bind
	
	/GetPageArray {
		SS2PageArray SpineFold get BindingEdge get

		Surface 0 eq BindingEdge /TopA eq and {
			% Special case rotate the last page
			% Only mess with the front array, though, otherwise
			% inversion for the back of non-W&T will be lost.
			[ exch aload pop exch
				[ exch {
					[ exch {
						% dict
						dup /PN get -1 eq {
							dup length dict copy
							dup begin
							/PO PO 180 add 360 mod def
							end
						} if
					} forall ] 	% row
				} forall ] % surface
				exch		% use the pre-existing back array
			 ]	% array
		} if
	} bind
			
	% PageSequence is called on each sheet to obtain the page indices to run 
	% on this page
	% It's set automatically as part of TableBasedLayout
	
	% SurfaceCount defaults automatically when PageCountUp/Across are defined.
	
	/FoldMarks [ true true ]
	
	% No CutMarks

>>

%%EOF