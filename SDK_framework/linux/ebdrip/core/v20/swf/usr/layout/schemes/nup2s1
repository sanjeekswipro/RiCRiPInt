%!PS-Adobe-3.0
%%Title: NUp_2s_1
%%Creator: Global Graphics Software Limited
%%CreationDate: Sept 2004
% Copyright (C) 2004 Global Graphics Software Limited. All Rights Reserved.
% Global Graphics Software Ltd. Confidential Information.
% $Revision: 1.5.10.1.1.1 $
%%EndComments

% $HopeName: SWv20!swf:usr:layout:schemes:nup2s1(EBDSDK_P.1) $


% This file defines the two-sided N-Up imposition scheme.
% Copyright (C) 2004 Global Graphics Software Limited. All Rights Reserved.

	<<

	/Name  (NUp_2s_1)

	/UserName (N-up, two-sided)
	
	/SchemeVersion	(2.0.0)

	/Sides 2

	/CheckDivisor 1

	/EarlyImposeDesign true

	% Any values that differ from those in Validate
	/LocalValidate <<
	>>
	
	/LocalValues [ ]
	
	% SetOnce should be a boolean or a procedure that returns a boolean
	% If true, a single layout is used for all surfaces, 
	% if false the layout is recalculated for every sheet
	/SetOnce false
	
	% Called at the start of the job to set anything that might be useful
	% later in SetLayout
	/Initialize { 
		PagesAcross 0 eq PagesUp 0 eq ne {
			(HqnLayout: NUp_2s_1: Error: Auto page count clash\n) ErrPrint
			/NUp_2s_1 /rangecheck (PagesAcross/Up) ExtraError
		} if
		PagesAcross 0 eq ImageWidth -1 eq and {
			(HqnLayout: NUp_2s_1: Error: Auto page count cannot be used with dimensions from job\n) ErrPrint
			/NUp_2s_1 /undefinedresult (FromJob/ImageWidth) ExtraError
		} if

		1 dict begin
		/i 0 def
		/NU2S1Array [
			2 { [
				HqnImpose2GlobalDict /PagesUp get { [
					HqnImpose2GlobalDict /PagesAcross get { <<
						/PN i
						/i i 1 add def
					>> } repeat	% cols
				] } repeat	% rows
			] } repeat		% surfaces
			
			% Now adjust back side for flipping
			TurnTopBottom {
				% reverse the order of columns in each row
				[ exch {
				[ mark 3 -1 roll aload pop
					% [ mark <<a>> <<b>> <<c>>
						{
						dup type /marktype eq { exit } if
						counttomark 1 add 1 roll
					} loop
					pop ]
				} forall ]
		
				% reverse the order of rows
				% [ [a] [b] [c] ]
				[ mark 3 -1 roll aload pop
				% [ mark [a] [b] [c]
					{
					dup type /marktype eq { exit } if
					counttomark 1 add 1 roll
				} loop
				pop ]
			} if
		]
		end def
	} bind

	/TableInitialize {
			<<
			/PageCountAcross HqnImpose2GlobalDict /PagesAcross get
			/PageCountUp HqnImpose2GlobalDict /PagesUp get
			/PageFlow /FlatWork
		>>          
	} bind          
	                
	/GetAutoSpine {
		% Shouldn't happen - should be caught by call validation
		(HqnLayout Error: Auto SpineFold used with NUp_2s_1 scheme\n) ErrPrint
		/NUp_2s_1 errordict /undefinedresult get exec
	} bind
	
	/GetPageArray {
		NU2S1Array
	} bind

	/CutMarks [ true true ]
	
	% No FoldMarks

>>

%%EOF