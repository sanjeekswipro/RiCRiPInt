%!PS-Adobe-3.0
%%Title: GGFontEmulation
%%Creator: Global Graphics Software Limited
%%Author: Simon Birtwistle
%%CreationDate: 20050222
% Copyright (C) 2004-2012 Global Graphics Software Ltd. All rights reserved.
% $HopeName: COREfonts!swf:procsets:fontem2(EBDSDK_P.1) $
%%EndComments

%%BeginProcSet: (GGFontEmulation) 1.7 1
currentglobal true setglobal
/GGFontEmulation 20 dict dup begin

  % Ensure that running this file twice doesn't break anything
  /_define statusdict /FontEmulation 2 copy known{
    pop pop {pop exch pop}
  }{
    1 dict put {defineresource}
    mark
      (%os%Config/FontEmulation){run}stopped
    cleartomark
  }ifelse def
  
  % The list of emulation fonts
  /_Fonts[
    /GGSerif
    /GGSerif-Italic
    /GGSans
    /GGSans-Oblique
    /GGSans         %/GGType
    /GGSans-Oblique %/GGType-Oblique
    /GGSerif-Italic %/GGScript
  ]def
  
  % the average stem width range, for PDF weight calculation
  /_Ranges[
    [25 135]
    dup
    [64 178]
    dup
    dup
    dup
    [25 135]
  ]def
  
  
  % The list of encodings
  /_Encodings[
    /StandardEncoding load
    [ % ExpertEncoding
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/space/exclamsmall
      /Hungarumlautsmall /.notdef/dollaroldstyle/dollarsuperior/ampersandsmall
      /Acutesmall/parenleftsuperior/parenrightsuperior/twodotenleader
      /onedotenleader/comma/hyphen/period/fraction/zerooldstyle/oneoldstyle
      /twooldstyle/threeoldstyle/fouroldstyle/fiveoldstyle/sixoldstyle
      /sevenoldstyle/eightoldstyle/nineoldstyle/colon/semicolon/commasuperior
      /threequartersemdash/periodsuperior/questionsmall/.notdef/asuperior
      /bsuperior/centsuperior/dsuperior/esuperior/.notdef/.notdef/.notdef
      /isuperior/.notdef/.notdef/lsuperior/msuperior/nsuperior/osuperior
      /.notdef/.notdef/rsuperior/ssuperior/tsuperior/.notdef/ff/fi/fl/ffi/ffl
      /parenleftinferior/.notdef/parenrightinferior/Circumflexsmall
      /hyphensuperior/Gravesmall/Asmall/Bsmall/Csmall/Dsmall/Esmall/Fsmall
      /Gsmall/Hsmall/Ismall/Jsmall/Ksmall/Lsmall/Msmall/Nsmall/Osmall/Psmall
      /Qsmall/Rsmall/Ssmall/Tsmall/Usmall/Vsmall/Wsmall/Xsmall/Ysmall/Zsmall
      /colonmonetary/onefitted/rupiah/Tildesmall/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/exclamdownsmall/centoldstyle/Lslashsmall/.notdef
      /.notdef/Scaronsmall/Zcaronsmall/Dieresissmall/Brevesmall/Caronsmall
      /.notdef/Dotaccentsmall/.notdef/.notdef/Macronsmall/.notdef/.notdef
      /figuredash/hypheninferior/.notdef/.notdef/Ogoneksmall/Ringsmall
      /Cedillasmall/.notdef/.notdef/.notdef/onequarter/onehalf/threequarters
      /questiondownsmall/oneeighth/threeeighths/fiveeighths/seveneighths
      /onethird/twothirds/.notdef/.notdef/zerosuperior/onesuperior/twosuperior
      /threesuperior/foursuperior/fivesuperior/sixsuperior/sevensuperior
      /eightsuperior/ninesuperior/zeroinferior/oneinferior/twoinferior
      /threeinferior/fourinferior/fiveinferior/sixinferior/seveninferior
      /eightinferior/nineinferior/centinferior/dollarinferior/periodinferior
      /commainferior/Agravesmall/Aacutesmall/Acircumflexsmall/Atildesmall
      /Adieresissmall/Aringsmall/AEsmall/Ccedillasmall/Egravesmall/Eacutesmall
      /Ecircumflexsmall/Edieresissmall/Igravesmall/Iacutesmall/Icircumflexsmall
      /Idieresissmall/Ethsmall/Ntildesmall/Ogravesmall/Oacutesmall
      /Ocircumflexsmall/Otildesmall/Odieresissmall/OEsmall/Oslashsmall
      /Ugravesmall/Uacutesmall/Ucircumflexsmall/Udieresissmall/Yacutesmall
      /Thornsmall/Ydieresissmall ]
    [ % ExpertSubsetEncoding
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/space/.notdef/.notdef/.notdef
      /dollaroldstyle/dollarsuperior/.notdef/.notdef/parenleftsuperior
      /parenrightsuperior/twodotenleader/onedotenleader/comma/hyphen/period
      /fraction/zerooldstyle/oneoldstyle/twooldstyle/threeoldstyle/fouroldstyle
      /fiveoldstyle/sixoldstyle/sevenoldstyle/eightoldstyle/nineoldstyle/colon
      /semicolon/commasuperior/threequartersemdash/periodsuperior/.notdef
      /.notdef/asuperior/bsuperior/centsuperior/dsuperior/esuperior/.notdef
      /.notdef/.notdef/isuperior/.notdef/.notdef/lsuperior/msuperior/nsuperior
      /osuperior/.notdef/.notdef/rsuperior/ssuperior/tsuperior/.notdef/ff/fi/fl
      /ffi/ffl/parenleftinferior/.notdef/parenrightinferior/.notdef
      /hyphensuperior/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/colonmonetary/onefitted/rupiah/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/centoldstyle/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/figuredash/hypheninferior/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/onequarter
      /onehalf/threequarters/.notdef/oneeighth/threeeighths/fiveeighths
      /seveneighths/onethird/twothirds/.notdef/.notdef/zerosuperior/onesuperior
      /twosuperior/threesuperior/foursuperior/fivesuperior/sixsuperior
      /sevensuperior/eightsuperior/ninesuperior/zeroinferior/oneinferior
      /twoinferior/threeinferior/fourinferior/fiveinferior/sixinferior
      /seveninferior/eightinferior/nineinferior/centinferior/dollarinferior
      /periodinferior/commainferior/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef ]
    [ % DefaultEncoding
      /.notdef/.notdef/.notdef/.notdef/.notdef/breve/dotaccent/.notdef/ring
      /.notdef/hungarumlaut/ogonek/caron/dotlessi/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/fraction
      /fi/fl/Lslash/lslash/Zcaron/zcaron/space/exclam/quotedbl/numbersign/dollar
      /percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
      /hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine
      /colon/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M
      /N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum
      /underscore/grave/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z
      /braceleft/bar/braceright/asciitilde/.notdef/Euro/.notdef/quotesinglbase
      /florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
      /Scaron/guilsinglleft/OE/.notdef/.notdef/.notdef/.notdef/quoteleft
      /quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde
      /trademark/scaron/guilsinglright/oe/.notdef/.notdef/Ydieresis/uni00A0
      /exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis
      /copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
      /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
      /periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
      /onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde
      /Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave
      /Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde
      /Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
      /Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae
      /ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex
      /idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
      /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis ]
    /ISOLatin1Encoding load
    [ % CE Encoding Vector
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
      /dollar/percent/ampersand/quotesingle/parenleft/parenright/asterix/plus
      /comma/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight
      /nine/colon/semicolon/less/equals/greater/question/at/A/B/C/D/E/F/G/H/I/J
      /K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/braketright
      /asciicircum/underscore/grave/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v
      /w/x/y/z/braceleft/verticalbar/braceright/asciitilde/.notdef/.notdef
      /.notdef/quotesinglbase/.notdef/quotedblbase/ellipsis/dagger/daggerdbl
      /.notdef/perthousand/Scaron/guilsinglleft/Sacute/Tcaron/Zcaron/Zacute
      /.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash
      /emdash/.notdef/trademark/scaron/guilsinglright/sacute/tcaron/zcaron
      /zacute/space/caron/breve/Lslash/currency/Aogonek/brokenbar/section
      /dieresis/copyright/Scommaaccent/guildblleft/logicalnot/hyphen/registered
      /Zdotaccent/degree/plusminus/ogonek/lslash/acute/mu/paragraph
      /periodcentered/cedilla/aogonek/scommaaccent/guildblright/Lcaron
      /hungarumlaut/lcaron/zdotaccent/Racute/Aacute/Acircumflex/Abreve/Adieresis
      /Lacute/Cacute/Ccedilla/Ccaron/Eacute/Eogonek/Edieresis/Ecaron/Iacute
      /Icircumflex/Dcaron/Dcroat/Nacute/Ncaron/Oacute/Ocircumflex/Ohungarumlaut
      /Odieresis/multiply/Rcaron/Uring/Uacute/Uhungarumlaut/Udieresis/Yacute
      /Tcommaaccent/germandbls/racute/aacute/acircumflex/abreve/adieresis/lacute
      /cacute/ccedilla/ccaron/eacute/eogonek/edieresis/ecaron/iacute/icircumflex
      /dcaron/dcroat/nacute/ncaron/oacute/ocircumflex/ohungarumlaut/odieresis
      /divide/rcaron/uring/uacute/uhungarumlaut/udieresis/yacute/tcommaaccent
      /dotaccent ]
    [ % MacRomanEncoding
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
      /dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus
      /comma/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight
      /nine/colon/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K
      /L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
      /asciicircum/underscore/grave/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v
      /w/x/y/z/braceleft/bar/braceright/asciitilde/.notdef/Adieresis/Aring
      /Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex
      /adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis
      /iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex
      /odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent
      /sterling/section/bullet/paragraph/germandbls/registered/copyright
      /trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef
      /.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine
      /ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot
      /.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis
      /space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright
      /quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency
      /guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered
      /quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
      /Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
      /.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron
      /breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron]
    [ % MacExpertEncoding
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/.notdef/space/exclamsmall
      /Hungarumlautsmall/centoldstyle/dollaroldstyle/dollarsuperior
      /ampersandsmall/Acutesmall/parenleftsuperior/parenrightsuperior
      /twodotenleader/onedotenleader/comma/hyphen/period/fraction/zerooldstyle
      /oneoldstyle/twooldstyle/threeoldstyle/fouroldstyle/fiveoldstyle
      /sixoldstyle/sevenoldstyle/eightoldstyle/nineoldstyle/colon/semicolon
      /.notdef/threequartersemdash/.notdef/questionsmall/.notdef/.notdef/.notdef
      /.notdef/Ethsmall/.notdef/.notdef/onequarter/onehalf/threequarters
      /oneeighth/threeeighths/fiveeighths/seveneighths/onethird/twothirds
      /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/ff/fi/fl/ffi/ffl
      /parenleftinferior/.notdef/parenrightinferior/Circumflexsmall
      /hypheninferior/Gravesmall/Asmall/Bsmall/Csmall/Dsmall/Esmall/Fsmall
      /Gsmall/Hsmall/Ismall/Jsmall/Ksmall/Lsmall/Msmall/Nsmall/Osmall/Psmall
      /Qsmall/Rsmall/Ssmall/Tsmall/Usmall/Vsmall/Wsmall/Xsmall/Ysmall/Zsmall
      /colonmonetary/onefitted/rupiah/Tildesmall/.notdef/.notdef/asuperior
      /centsuperior/.notdef/.notdef/.notdef/.notdef/Aacutesmall/Agravesmall
      /Acircumflexsmall/Adieresissmall/Atildesmall/Aringsmall/Ccedillasmall
      /Eacutesmall/Egravesmall/Ecircumflexsmall/Edieresissmall/Iacutesmall
      /Igravesmall/Icircumflexsmall/Idieresissmall/Ntildesmall/Oacutesmall
      /Ogravesmall/Ocircumflexsmall/Odieresissmall/Otildesmall/Uacutesmall
      /Ugravesmall/Ucircumflexsmall/Udieresissmall/.notdef/eightsuperior
      /fourinferior/threeinferior/sixinferior/eightinferior/seveninferior
      /Scaronsmall/.notdef/centinferior/twoinferior/.notdef/Dieresissmall
      /.notdef/Caronsmall/osuperior/fiveinferior/.notdef/commainferior
      /periodinferior/Yacutesmall/.notdef/dollarinferior/.notdef/.notdef
      /Thornsmall/.notdef/nineinferior/zeroinferior/Zcaronsmall/AEsmall
      /Oslashsmall/questiondownsmall/oneinferior/Lslashsmall/.notdef/.notdef
      /.notdef/.notdef/.notdef/.notdef/Cedillasmall/.notdef/.notdef/.notdef
      /.notdef/.notdef/OEsmall/figuredash/hyphensuperior/.notdef/.notdef/.notdef
      /.notdef/exclamdownsmall/.notdef/Ydieresissmall/.notdef/onesuperior
      /twosuperior/threesuperior/foursuperior/fivesuperior/sixsuperior
      /sevensuperior/ninesuperior/zerosuperior/.notdef/esuperior/rsuperior
      /tsuperior/.notdef/.notdef/isuperior/ssuperior/dsuperior/.notdef/.notdef
      /.notdef/.notdef/.notdef/lsuperior/Ogoneksmall/Brevesmall/Macronsmall
      /bsuperior/nsuperior/msuperior/commasuperior/periodsuperior/Dotaccentsmall
      /Ringsmall/.notdef/.notdef/.notdef/.notdef]
  ]def
  
  % The encoding translation tables
  /_Trans[
    [ % StandardEncoding (special)
      0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 1 16 17 18 19 20 21 22 23 24 25 26 27
      28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
      53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
      78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
      102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119
      120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137
      138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155
      156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173
      174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191
      192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209
      210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
      228 229 230 ]
    [ % ExpertEncoding
      0 1 333 422 324 325 312 417 371 373 402 363 27 28 29 9 414 367 404 398 346
      341 389 385 329 358 41 42 321 399 375 377 313 314 317 326 331 350 354 355
      360 369 380 392 400 334 10 11 335 336 370 372 418 349 416 237 239 241 242
      247 259 260 261 267 269 270 272 273 274 282 284 285 286 290 292 297 298
      303 304 309 311 318 365 381 419 332 316 271 289 310 428 423 421 424 425
      337 348 426 420 427 163 164 165 376 364 396 339 383 368 405 415 160 153
      154 347 342 390 386 330 359 413 366 403 397 345 340 388 384 328 357 315
      323 374 320 235 232 233 238 234 236 231 240 246 243 244 245 266 262 263
      264 248 275 280 277 278 283 279 276 281 296 293 294 295 305 291 307 ]
    [ % ExpertSubsetEncoding
      0 1 324 325 371 373 402 363 27 28 29 9 414 367 404 398 346 341 389 385 329
      358 41 42 321 399 375 313 314 317 326 331 350 354 355 360 369 380 392 400
      334 10 11 335 336 370 372 349 318 365 381 316 337 348 163 164 165 364 396
      339 383 368 405 415 160 153 154 347 342 390 386 330 359 413 366 403 397
      345 340 388 384 328 357 315 323 374 320 ]
    [ % DefaultEncoding
      0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 1 16 17 18 19 20 21 22 23 24 25 26 27
      28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
      53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
      78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
      102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119
      120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137
      138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155
      156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173
      174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191
      192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209
      210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
      228 229 230 ]
    [ % ISOLatin1Encoding
      0 1 16 17 18 19 20 21 123 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
      39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
      64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 122 80 81 82 83 84 85 86 87
      88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
      109 110 111 112 113 114 115 116 118 119 120 121 122 123 124 125 126 127
      128 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146
      147 28 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165
      166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183
      184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201
      202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219
      220 221 222 223 224 225 226 227 228 229 230 ]
  ]def
  
  % The names of the encodings (for PDF)
  /_Names 9 dict dup begin
    /StandardEncoding 0 def
    /ExpertEncoding 1 def
    /ExpertSubsetEncoding 2 def
    /DefaultEncoding 3 def
    /ISOLatin1Encoding 4 def
    /WinAnsiEncoding 4 def
    /CEEncoding 5 def
    /MacRomanEncoding 6 def
    /MacExpertEncoding 7 def
  end def

  % The index of glyph names to widths array indices
  /_Index [
    /.notdef/space/breve/dotaccent/ring/hungarumlaut/ogonek/caron/dotlessi
    /fraction/fi/fl/Lslash/lslash/Zcaron/zcaron/exclam/quotedbl/numbersign
    /dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus
    /comma/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine
    /colon/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
    /O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum
    /underscore/grave/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z
    /braceleft/bar/braceright/asciitilde/Euro/quotesinglbase/florin/quotedblbase
    /ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
    /quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde
    /trademark/scaron/guilsinglright/oe/Ydieresis/uni00A0/exclamdown/cent
    /sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
    /guillemotleft/logicalnot/minus/registered/macron/degree/plusminus
    /twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
    /onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
    /questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
    /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth
    /Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
    /Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
    /acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
    /edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
    /ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
    /udieresis/yacute/thorn/ydieresis/AEsmall/Aacutesmall/Abreve/Abrevesmall
    /Acircumflexsmall/Adieresissmall/Agravesmall/Aogonek/Aogoneksmall/Aringsmall
    /Asmall/Atildesmall/Bsmall/Cacute/Cacutesmall/Ccaron/Ccaronsmall
    /Ccedillasmall/Csmall/Dcaron/Dcroat/Dcroatsmall/Dsmall/Eacutesmall/Ecaron
    /Ecaronsmall/Ecircumflexsmall/Edieresissmall/Egravesmall/Eogonek
    /Eogoneksmall/Esmall/Ethsmall/FF/FFI/FFIsmall/FFL/FFLsmall/FFsmall/FI
    /FIsmall/FL/FLsmall/Fsmall/Gsmall/Hsmall/Iacutesmall/Icircumflexsmall
    /Idieresissmall/Idotaccent/Igravesmall/Ismall/Jalt/Jsmall/Ksmall/Lacute
    /Lacutesmall/Lcaron/Lcaronsmall/Lslashsmall/Lsmall/Msmall/Nacute/Nacutesmall
    /Ncaron/Ncaronsmall/Nsmall/Ntildesmall/OEsmall/Oacutesmall/Ocircumflexsmall
    /Odieresissmall/Ogravesmall/Ohungarumlaut/Ohungarumlautsmall/Oslashsmall
    /Osmall/Otildesmall/Psmall/Qsmall/Racute/Racutesmall/Rcaron/Rcaronsmall
    /Rsmall/SS/SSsmall/Sacute/Sacutesmall/Scaronsmall/Scommaaccent
    /Scommaaccentsmall/Ssmall/Tcaron/Tcaronsmall/Tcommaaccent/Tcommaaccentsmall
    /Thornsmall/Tsmall/Uacutesmall/Ucircumflexsmall/Udieresissmall/Ugravesmall
    /Uhungarumlaut/Uhungarumlautsmall/Uring/Uringsmall/Usmall/Vsmall/Wacute
    /Wcircumflex/Wdieresis/Wgrave/Wsmall/Xsmall/Yacutesmall/Ycircumflex
    /Ydieresissmall/Ygrave/Ysmall/Zacute/Zacutesmall/Zcaronsmall/Zsmall/abreve
    /ampersandsmall/aogonek/asuperior/bsuperior/cacute/ccaron/centinferior
    /centoldstyle/centsuperior/colonmonetary/commaaccent/commainferior
    /commasuperior/dcaron/dcroat/dollaralt/dollarinferior/dollaroldstyle
    /dollarsuperior/dsuperior/ecaron/eightalt/eightinferior/eightoldstyle
    /eightsuperior/eogonek/esuperior/exclamdownsmall/exclamsmall/ff/ffi/ffl
    /figuredash/fivealt/fiveeighths/fiveinferior/fiveoldstyle/fivesuperior/fj
    /fouralt/fourinferior/fouroldstyle/foursuperior/hypheninferior
    /hyphensuperior/isuperior/lacute/lcaron/longdbls/longsi/longsl/lsuperior
    /msuperior/nacute/ncaron/ninealt/nineinferior/nineoldstyle/ninesuperior
    /nsuperior/onealt/onealtfitted/onedotenleader/oneeighth/onefitted
    /oneinferior/oneoldstyle/onethird/oogonek/osuperior/parenleftinferior
    /parenleftsuperior/parenrightinferior/parenrightsuperior/periodinferior
    /periodsuperior/questiondownsmall/questionsmall/quotealtdblleft/quotealtleft
    /racute/rcaron/rsuperior/rupiah/sacute/scommaaccent/sevenalt/seveneighths
    /seveninferior/sevenoldstyle/sevensuperior/sixalt/sixinferior/sixoldstyle
    /sixsuperior/slong/ssuperior/st/sterlingalt/tcaron/tcommaaccent/threealt
    /threeeighths/threeinferior/threeoldstyle/threequartersemdash/tsuperior
    /twoalt/twodotenleader/twoinferior/twooldstyle/twothirds/uhungarumlaut/uring
    /wacute/wcircumflex/wdieresis/wgrave/ycircumflex/ygrave/zacute/zeroalt
    /zeroinferior/zerooldstyle/zerosuperior/Gravesmall/Acutesmall
    /Circumflexsmall/Tildesmall/Ringsmall/Caronsmall/Hungarumlautsmall
    /Brevesmall/Dotaccentsmall/Macronsmall/Ogoneksmall/Cedillasmall
    /Dieresissmall
  ] dup length dict begin
  0 exch{1 index def 1 add}forall pop
  currentdict end def
  
  % display an error containing a single name parameter, and raise an error
  /_Raise{% /font (pre) (post) Raise
    (%%[ Error: )print exch print exch 100 string cvs print print( ]%%\n)print
    /findfont /undefined systemdict /.error get exec
  }bind def
  
  /_Int{
    exch aload pop                  % {p}{q}{r} w s1 s2 s3 s4
    1 index sub 4 index mul add     % {p}{q}{r} w s1 s2 s34
    3 1 roll                        % {p}{q}{r} w s34 s1 s2
    1 index sub 3 index mul add     % {p}{q}{r} w s34 s12
    2 copy
  }bind def

  
  %-----------------------------------------------------------------------
  % Now the code
  
  % This is a temporary buffer used to get data out of a save context
  /_DataString 1024 string def
  /_On [false 16#FFFFFF] def
  
  % This routine applies a personality to an emulation font
  /makeemulatedfont{
    % /fontname (Data)   or
    % /fontname [widths] [encoding] fontnum caps weight (*)
    % -> /fontname <<font>>
    dup(*)eq{
      % discrete parameters (PDF) rearrange to suit
      pop                    % /fontname [w] [e] f c w
      196 exch 64 4 3 roll   % /fontname [w] [e] f x w a c
      0 0 0 -1 9 8 roll      % /fontname [w] [e] x w a c 0 0 0 -1 f
    }{
      % string (font database)
      dup dup length 12 sub 12      % /fontname (data) (data) len-12 12
      getinterval{}forall           % ..dl dh ml mh x w a dc ul um uh ef
      
      dup 16 idiv exch 16 mod       % ..dl dh ml mh x w a dc ul um uh e f
    }ifelse
    % /fontname (data) dl dh ml mh x w a dc ul um uh e f   or
    % /fontname [w] [e] x w a c 0 0 0 -1 f

    //_Fonts exch get findfont      % ..dl dh ml mh x w a dc ul um uh e <<font>>
    
    dup /$Emu known not{
      11{pop}repeat
      % UVM(%%%%[ Error: Font %s not found. (FontEmulation installation) ]%%%%)
      (Font )( not found. (FontEmulation installation))//_Raise exec
    }if
    dup length 1 add dict begin     % now inside our new font dict
    /DistillerFauxFont true def
    { false[/UniqueID/XUID/FID]     % don't copy IDs
      {3 index eq or}forall
      {pop pop}{
        1 index /Private eq{        % Private dict must be unique to instance
          dup length dict begin
          {def}forall currentdict end
        }{
          false[/$Emu/Weights/Widths] % these must be unique to the instance,
          {3 index eq or}forall       % not shared between all!
          { dup xcheck exch
            [exch aload pop]
            exch{cvx}if
          }if
        }ifelse def
      }ifelse
    }forall                         % ..dl dh ml mh x w a dc ul um uh e

    dup -1 gt{
      dup //_Trans exch get         % ..dl dh ml mh x w a dc ul um uh e [t]
      13 1 roll                     % ..[t] dl dh ml mh x w a dc ul um uh e
      //_Encodings exch get         % ..[t] dl dh ml mh x w a dc ul um uh [e]
    }{
      pop 7 index                   % /fontname [w] [e] x w a c 0 0 0 [e]
    }ifelse /Encoding exch def
    
    256 mul add 256 mul add         % ..[t] dl dh ml mh x w a dc u
    dup 0 eq{pop}{
      /UniqueID exch def          % ..[t] dl dh ml mh x w a dc
    }ifelse
    
    dup 16 idiv exch 16 mod         % ..[t] dl dh ml mh x w a d c
    dup 0 ne{3 exch sub}if
    /$Case exch def /$Figs exch def % ..[t] dl dh ml mh x w a
    
    64000 div /FontMatrix[0.001
    0 0 6 5 roll 0 0]readonly def   % ..[t] dl dh ml mh x w

    100 div 0.5 sub
    % at this point we need to recalculate the hints depending on the weight
    Blend /FontBBox get aload pop
    5 4 roll 2{                       % ..{p}{q}{r}{s} w
      //_Int exec lt{exch}if pop 5 1 roll  % ..s {p}{q}{r} w
      //_Int exec gt{exch}if pop 5 1 roll  % ..r s {p}{q} w
    }repeat 5 1 roll                % ..w p q r s
    /FontBBox [ 6 2 roll ] cvx      % ..w /FontBBox {p q r s}
    readonly def                    % ..w
    Private begin                     % ..w
    [/BlueValues/OtherBlues/StdHW/StdVW/StemSnapH/StemSnapV]{
      Blend /Private get 1 index get  % ..w /BlueValues [...]
      dup length dup array            % ..w /BlueValues [...] 6 []
      0 1 4 3 roll 1 sub{             % ..w /BlueValues [...] [] i(0-5)
        2 index 1 index get aload pop % ..w /BlueValues [...] [] i a b c d
        pop pop 1 index sub           % ..w /BlueValues [...] [] i a b-a
        6 index mul add               % ..w /BlueValues [...] [] i n
        3 copy put pop pop            % ..w /BlueValues [...] []
      }for exch pop noaccess def      % ..w
    }forall end
    Weights exch 0 exch put         % ..(data) [t] dl dh ml mh x
    
    pop                             % ..(data) [t] dl dh ml mh   or
                                    % ..[w] [e]
    
    dup type /arraytype eq{
      % pdf metrics
      Widths 3 1 roll //_Index exch % [Widths] [256] <<..>> [encoding]
      0 1 255{
        5 copy                      % ..i [Widths] [widths] <<index>> [enc] i
        get 2 copy known{
          get                       % i [Widths] [widths] index
          exch 4 3 roll get         % [Widths] index width
          put
        }{
          5{pop}repeat
        }ifelse
      }for
      4{pop}repeat
    }{
      % database metrics
      256 mul add 3 1 roll            % ..(data) [t] m dl dh
      256 mul add 255 div             % ..(data) [t] m d
      Widths 4 1 roll 0 3 1 roll      % ..(data) [w] [t] 0 m d
      6 5 roll dup length 12 sub      % ..[w] [t] 0 m d (data) len-12
      0 exch getinterval{             % ..[w] [t] i m d c
        6 copy mul add 3 1 roll       % ..[w] [t] i m d c [w] w [t] i
        get exch put pop              % ..[w] [t] i m d
        3 2 roll 1 add 3 1 roll
      }forall 5{pop}repeat            % /fontname
    }ifelse
    
    /FontName 1 index def
    
    currentdict end                 % /fontname <<font>>
  }def

  /_PDF{  % /name ? ? <<PDFFontDescription>>  ->  /name ..things.. (*)
    begin pop pop
    
      % Extend widths array to 256 entries...
      Widths FontDescriptor /MissingWidth 2 copy known
      not{pop pop dup 0}if get  % [widths] missingwidth
      256 array exch            % [w] [256] missing
      0 1 255{3 copy exch put pop}for
      pop exch                  % [256] [w]
      FirstChar exch 0 1 LastChar 4 index sub{
        % [256] first [w] i
        4 copy get % [256] first [w] i [256] first val
        exch 4 3 roll add exch put
      }for
      pop pop % /name [widths256]
      
      % Get the encoding...
      currentdict/Encoding known{
        Encoding dup type /nametype eq{
          % encoding is a named one
          % MacRomanEncoding/MacExpertEncoding/WinAnsiEncoding
          //_Names exch 2 copy known{
            get //_Encodings exch get
          }{
            pop pop StandardEncoding
          }ifelse
          % [encoding]
        }{
          % a dict containing a Differences array,
          % and possibly a BaseEncoding
          dup /BaseEncoding 2 copy known{
            get //_Names exch 2 copy known{
              get //_Encodings exch get
            }{
              pop pop StandardEncoding
            }ifelse
          }{
            pop pop StandardEncoding
          }ifelse
          % <<..>> [baseencoding]
          256 array dup 0 4 3 roll putinterval 
          exch 0 exch /Differences 2 copy known{
            get
            % [encoding] 0 [differences]
            {
              dup type dup /nametype eq{
                pop 3 copy put pop 1 add
              }{
                /integertype eq{
                  exch pop
                }{
                  pop 1 add
                }ifelse
              }ifelse
            }forall
          }{
            pop pop
          }ifelse
          pop  % [encoding]
        }ifelse
      }{
        % "StandardEncoding" is implicit
        StandardEncoding
      }ifelse
      % /name [widths] [encoding]
  
      % now the weight, font and caps style...
      FontDescriptor begin
        Flags
        dup 8 and 8 eq{6}{
          dup 2 and 2 eq{0}{2}ifelse
          1 index 64 and 64 eq{1 add}if
        }ifelse exch                            % fontnum flags
        -16 bitshift 3 and <00020101> exch get  % fontnum caps
        StemV {StemH}stopped{dup}if add 2 div   % fontnum caps stemweight
      end %FontDescriptor
      % adjust the weight for the font selected
      //_Ranges 3 index get aload pop
      1 index sub 3 1 roll sub exch div         % weight 0=light, 1=black
      .5 add 100 mul                            % extend to parameter range
      % /name [widths] [encoding] fontnum caps weight
    end
    (*) % magic parameter for makeemulatedfont
  }def
  
  /_PS{
    % /name ? /alias
    % /name ? <string>
    dup type /stringtype ne{
      % didn't find the font, so look it up
      % ../name
      dup dup length string cvs 0 exch
      % ../name 0 (name)
      {xor dup 23 bitshift xor dup -9 bitshift xor
      dup 0 lt{-8388608 xor}if}forall
      % ../name int(hash)
      dup -5 bitshift exch 31 and
      % ../name int(key) byte(file)  there are 32 files
      save 3 1 roll
      (00) dup 0 (00) putinterval
      cvs dup length 7 add string dup
      0 (FontDB/) putinterval
      dup 7 4 3 roll putinterval
      {run}stopped{pop 1 dict}if
      % ../name save int(key) <<...>>
      exch 16#3FFFFFF and 16 (3FFFFFF) cvrs dup length
      7 exch sub exch (0000000) dup 0 (0000000) putinterval
      dup 4 2 roll putinterval cvn
      % ../name save <<...>> /key
      2 copy known{
        get dup type /stringtype eq{
          true
        }{
          dup type /dicttype eq{
            % collision! the value is a dictionary containing unhashed
            % 'GG' prefixed names and string data
            % ../name save <<..>>
            2 index dup length string cvs
            dup length 2 add string dup 0 (GG) putinterval
            dup 2 4 3 roll putinterval cvn
            % ../name save <<..>> /GGname
            2 copy known{
              get true
            }{
              pop pop false
            }ifelse
          }{
            % unrecognised data, ignore
            pop false
          }ifelse% collision
        }ifelse% stringtype
      }{
        % unknown font
        pop pop false
      }ifelse
      % ../name save <string> true
      % ../name save false
      {
        % /name ? /alias save <string>
        //_DataString exch 2 copy  % /name ? /alias save <ds><s><ds><s>
        0 exch putinterval length  % /name ? /alias save <ds> len
        3 2 roll restore
        0 exch getinterval
        3 1 roll pop pop           % /name <string>
      }{
        % /name ? /alias save
        % not found in emulation, so revert to original
        restore pop
        % /name ?
        dup null eq{
          % original findresource returned an error, so return our own
          pop
          % UVM(%%%%[ Error: Font %s not found. (Emulation unknown) ]%%%%)
          (Font )( not found. (Emulation unknown))//_Raise exec
        }{
          % UVM(%%%%[ Warning: Font %s not found, using %s. (Emulation unknown) ]%%%%)
          (%%[ Warning: Font )print 1 index =print
          ( not found, using )print
          dup/FontName{get}stopped{
            pop pop(default)
          }if =print
          (. (Emulation unknown) ]%%)=
        }ifelse
        exch pop
        % <<font>>
      }ifelse
    }{
      % we have the string already
      % /name ? <string>
      exch pop
    }ifelse
  }def
  
  % Apply our veneer to the Font category FindResource
  /Font /Category 2 copy findresource      % /Font /Category <<resource>>
  /FindFont 1 index /FindResource get def  % /Font /Category <<resource>>
  dup length dict begin{def}forall
  /FindResource{
    //_On 0 get{
      % /name or (name)
      dup type /stringtype eq{cvn}if
      % /name
      % suppress "Font not found" message from original FindFont
      1 dict dup begin /SilentFontFault dup dup
      currentuserparams exch get def end
      1 dict dup begin exch true def end setuserparams
      1 index{//FindFont exec}stopped{
        % findfont failed, so try to proceed with emulation
        pop setuserparams null true
      }{
        % findfont succeeded, but may have given us Courier
        exch setuserparams
        2 copy /FontName get dup type /stringtype eq{cvn}if ne
      }ifelse
      % /name <<font>> false  or  /name <<font>> true  or  /name null true
      {% emulate if possible
        % /name <<font>>  or  /name null
        % Check whether this font is in the user's list of special cases
        statusdict /FontEmulation get
        2 index 2 copy known{ % /name ? <<fe>> /name
          % Font is in user's FontEmulation file
          get dup type  % /name ? value type
          dup /booleantype eq{
            % /fontname false  =>  /fontname null
            1 index not{pop pop null /nulltype}if
          }if
          dup /nulltype eq{
            % /fontname null  means don't emulate - raise an error
            % /name ? null /nulltype
            pop pop
            dup null eq{
              pop
              % UVM(%%%%[ Error: Font %s not found. (Emulation disabled) ]%%%%)
              (Font )( not found. (Emulation disabled))//_Raise exec
            }if
            false % /name <<font>> false
          }{
            % /name ? value type
            dup /nametype eq{
              % /fontname /alias  reuse the existing data
              pop true
              % /name ? /alias true
            }{
              % /name ? value type
              /stringtype ne{
                pop pop
                % UVM(%%%%[ Error: FontEmulation syntax: /%s illegal value ]%%%%)
                (FontEmulation syntax. /)( invalid value.)//_Raise exec
              }if
              true % /name ? <string> true
            }ifelse
          }ifelse
        }{% /name ? <<fe>> /name
          % font not in user's special case list
          exch pop true
          % /name ? /name true
        }ifelse
        % /name ? false
        % /name ? /alias true
        % /name ? <string> true
        % /name ? /name true
        
        % here when we have exhausted the user's FontEmulation file
        % we may or may not have to look the font up in the database
        % last object is true if we need to emulate, next is:
        % /alias    if we need to look it up in the database
        % (string)  if we already have the personality
        {
          % but wait! What if this is actually a PDF?
          1183615869 internaldict /FontDescriptor 2 copy known{
            get /FontDirectory 2 copy known{
              get dup/Widths known{
                true
              }{
                pop false
              }ifelse
            }{
              pop pop false
            }ifelse
          }{
            pop pop false
          }ifelse
          % ..<<PDFFontDictionary>> true  or
          % ..false
          {
            % this is a PDF, so ignore the font database
            //_PDF
            % /name ..things.. (*)
          }{
            % not a PDF, so examine the font database...
            //_PS
          }ifelse exec
        }if
        % /name (string)  or
        % /name ..things.. (*)  or
        % <<font>>
        dup type /stringtype eq{
          //makeemulatedfont exec     % /name <<font>>
          % UVM(%%%%[ Warning: Font %s emulated. ]%%%%)
          1 index (%%[ Warning: Font )print =print( emulated. ]%%)=
          definefont            % <<font>>
        }if
      }{
        exch pop
      }ifelse % emulate?
    }{
      //FindFont exec
    }ifelse
  }def

  currentdict exch end _define pop

  % Now define our enable and disable routines
  /Emulate{
    //_On 0 true put
    UVS(FontEmulation enabled)=
  }def
  /StopEmulation{
    //_On 0 false put
    UVS(FontEmulation disabled)=
  }def

  //_define

  [/_Fonts/_Encodings/_Trans/_Raise/_Int/_define/_DataString
   /_On/_Names/_Index/_Ranges/_PS/_PDF/makeemulatedfont/FindFont]
  {currentdict exch undef}forall

end /ProcSet exch exec pop
setglobal

%%EndProcSet


