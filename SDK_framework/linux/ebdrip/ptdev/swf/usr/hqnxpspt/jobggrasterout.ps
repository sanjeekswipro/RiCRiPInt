%!PS
%%Creator: Global Graphics Software Limited
% Copyright (C) 2007-2010 Global Graphics Software Ltd. All rights reserved.
% $HopeName: SWptdev!swf:usr:hqnxpspt:jobggrasterout.ps(EBDSDK_P.1) $
%%EndComments

1 dict begin

%
% This example is provided on an "as is" basis and without
% warranty of any kind. Global Graphics Software Ltd. does not
% warrant or make any representations regarding the use or results
% of use of this example.
%
% Extension for the PrintTicket procset.
%
% This code handles support for JobGGRasterOut, governing how RIP output
% is to be produced.
%
% Each callback function is called with arguments of the form:
%   setup_dict CallBackProc -
% where setup_dict contains the following entries (amongst others):
%   /RIPPrintTicket - The PrintTicket settings which we obtained from the RIP.
%   /scope          - The scope at which we're currently processing (/Job, /Document, /Page).
%   /DeviceDict     - A dictionary of settings which will eventually be used
%                     in calls to setpagedevice.
%   /PGBParamDict   - A dictionary of settings which will eventually be used
%                     in calls to setdevparams for the pagebuffer device.
%   /pt_key         - The name of the PrintTicket option which triggered this callback.
%   /pt_value       - Contains the data for the PrintTicket option which triggered this callback.
%
% For more information see ProcessTicket in the HqnXPSPrintTicket procset.

/OutputConfigDict <<
  /TIFF     << /Type /TIFF  /Target /FILE   >>
  /XPS      << /Type /XPS   /Target /FILE   >>
  /XPSPIPE  << /Type /XPS   /Target /STREAM >>
  /RAW      << /Type /RAW   /Target /STREAM >>
  /RLE      << /Type /RLE   /Target /FILE   >>
  /PCL5     << /Type /PCL5  /Target /FILE   >>
  /PCL5PIPE << /Type /PCL5  /Target /STREAM >>
  /PCL6     << /Type /PCL6  /Target /FILE   >>
  /PCL6PIPE << /Type /PCL6  /Target /STREAM >>
>> def

% rasterout PageBufferTypeFromRasterOut name
/PageBufferTypeFromRasterOut {
  //OutputConfigDict 1 index known not {
    (%%[ Warning: Unknown PageBufferType requested. Using XPSPIPE. ]%%) =
    pop /XPSPIPE
  }if

  //OutputConfigDict exch /XPSPIPE GetDictValueWithDefault
  /Type get
} bind def

% rasterout OutputTargetFromRasterOut name
/OutputTargetFromRasterOut {
  //OutputConfigDict 1 index known not { pop /XPSPIPE }if

  //OutputConfigDict exch /XPSPIPE GetDictValueWithDefault
  /Target get
} bind def

/DoJobGGRasterOut {
  begin
    pt_value [/Value] /XPSPIPE GetPTValueWithDefault exch pop
    
    % Store PageBufferType setting in procset state
    InternalState /PageBufferType 2 index //PageBufferTypeFromRasterOut exec put
    PGBParamDict /PageBufferType InternalState /PageBufferType get put
    PGBParamDict /OutputTarget 2 index //OutputTargetFromRasterOut exec put
    
    % Update page device dictionary
    % Note: This setting is applied directly in the PT procset.
    DeviceDict /PageBufferDevice InternalState /PageBufferType get put 

    /RLE eq {
      % Using RLE output
      DeviceDict begin
        /RunLength true def
        /RunOverlap true def
      end
    }{
      % Not using RLE output
      DeviceDict /RunLength false put
    }ifelse
  end
} bind def

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Register this code with the PrintTicket procset
<<
  /JobGGRasterOut << /Action //DoJobGGRasterOut >>
>>

end
